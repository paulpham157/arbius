/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ArbiusRouterV1,
  ArbiusRouterV1Interface,
} from "../../contracts/ArbiusRouterV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "engine_",
        type: "address",
      },
      {
        internalType: "address",
        name: "arbius_",
        type: "address",
      },
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidValidator",
    type: "error",
  },
  {
    inputs: [],
    name: "SignersNotSorted",
    type: "error",
  },
  {
    inputs: [],
    name: "SubmitTaskFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "TimeNotPassed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "taskid",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "IncentiveAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "taskid",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "IncentiveClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "minValidators",
        type: "uint256",
      },
    ],
    name: "MinValidatorsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "ValidatorSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "taskid_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "addIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "arbius",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "taskids_",
        type: "bytes32[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct Signature[]",
        name: "sigs_",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "sigsPerTask_",
        type: "uint256",
      },
    ],
    name: "bulkClaimIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "taskid_",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct Signature[]",
        name: "sigs_",
        type: "tuple[]",
      },
    ],
    name: "claimIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "taskid_",
        type: "bytes32",
      },
    ],
    name: "emergencyClaimIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "engine",
    outputs: [
      {
        internalType: "contract IArbius",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "incentives",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minValidators",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiver",
    outputs: [
      {
        internalType: "contract SwapReceiver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minValidators_",
        type: "uint256",
      },
    ],
    name: "setMinValidators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status_",
        type: "bool",
      },
    ],
    name: "setValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "version_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "model_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "input_",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "incentive_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gas_",
        type: "uint256",
      },
    ],
    name: "submitTask",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "version_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "model_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "input_",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "incentive_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gas_",
        type: "uint256",
      },
    ],
    name: "submitTaskWithETH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "version_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "model_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "input_",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "incentive_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountInMax_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gas_",
        type: "uint256",
      },
    ],
    name: "submitTaskWithToken",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "uniswapApprove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash_",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct Signature[]",
        name: "sigs_",
        type: "tuple[]",
      },
    ],
    name: "validateSignatures",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "validators",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060409080825234620001c957608081620021fe8038038091620000258285620001ce565b833981010312620001c9576200003b8162000208565b906020906200004c82820162000208565b6200006760606200005f87850162000208565b930162000208565b600080546001600160a01b0319808216339081178455895193989495946001600160a01b03949385928392839283929083167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08f80a31696878560015416176001551697888460025416176002551695868360035416176003551690600454161760045563095ea7b360e01b92838252600482015285816044818a600019998a60248401525af18015620001bf576044928795949289926200019d575b5060025416895196879586948552600485015260248401525af1801562000193576200015e575b505060065551611fc69081620002388239f35b816200018292903d106200018b575b620001798183620001ce565b8101906200021d565b5038806200014b565b503d6200016d565b84513d85823e3d90fd5b620001b790873d89116200018b57620001798183620001ce565b503862000124565b88513d89823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b03821190821017620001f257604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001c957565b90816020910312620001c957518015158103620001c9579056fe6080604052600436101561001b575b361561001957600080fd5b005b6000803560e01c80631cec43ba1461142b578063297035b3146113d15780634623c91d1461135257806351cff8d91461125b5780636077779514611231578063715018a6146111e9578063739edcbe14610c8457806379dfe40c14610c365780638da5cb5b14610c0f57806391067f9014610bb1578063b235d02a14610779578063b28678051461075e578063c5ab224114610740578063c9d4623f14610717578063d7f332b61461063a578063e086e5ec1461060c578063e0d61b07146105e3578063e93ae81c1461045f578063f2fde38b146103ae578063f7260d3e14610385578063f887ea401461035c578063fa52c7d81461031d5763fb53f5b114610124575061000e565b3461031a5780806101343661179c565b95929098969493602061017360018060a01b03600254166101558d85611996565b6040519b8c809481936323b872dd60e01b83523033600485016119b9565b03925af197881561030f5789986102b9575b506101be92889594926101b092604051968795602087019a6308745dd160e01b8c52602488016119db565b03601f198101835282611900565b60018060a01b0360015416905193f16101d5611966565b50156102a7576001546040516360beed9560e11b81529290602090849060049082906001600160a01b03165afa92831561029a578193610260575b5091816020938293610228575b505050604051908152f35b600080516020611f318339815191529160408285889452600784522061024f828254611996565b9055604051908152a280388061021d565b92506020833d602011610292575b8161027b60209383611900565b8101031261028d576020925192610210565b600080fd5b3d915061026e565b50604051903d90823e3d90fd5b6040516335541d8d60e21b8152600490fd5b90929750602094939194813d602011610307575b816102da60209383611900565b8101031261030357889788956101be946102f66101b094611923565b5092509294955092610185565b8880fd5b3d91506102cd565b6040513d8b823e3d90fd5b80fd5b503461031a57602036600319011261031a5760209060ff906040906001600160a01b03610348611759565b168152600584522054166040519015158152f35b503461031a578060031936011261031a576003546040516001600160a01b039091168152602090f35b503461031a578060031936011261031a576004546040516001600160a01b039091168152602090f35b503461031a57602036600319011261031a576103c8611759565b6103d061185f565b6001600160a01b0390811690811561040b576000548260018060a01b031982161760005516600080516020611f71833981519152600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461031a578061046f3661182c565b6001546040516375c7050960e01b60208083019182526024808401889052835295946001600160a01b03949390928892839287169183906104af816118e5565b51925af150826104ce6104c0611966565b878082518301019101611e5b565b93919290501633036105a7575b5061051f9286949282866104f29451910120611bac565b6002541683865260078352604086205460405196878094819363a9059cbb60e01b83523360048401611930565b03925af1801561059c57610563575b60079250808452828252604084205460405190815281600080516020611f51833981519152843393a383525280604081205580f35b8183813d8311610595575b6105788183611900565b810103126105915761058b600793611923565b5061052e565b8380fd5b503d61056e565b6040513d86823e3d90fd5b909650919290916001600160401b03906105c090611f08565b1642106105d15791908695386104db565b604051631a0a745560e11b8152600490fd5b503461031a578060031936011261031a576002546040516001600160a01b039091168152602090f35b503461031a578060031936011261031a5761062561185f565b8080808047335af150610636611966565b5080f35b503461031a57604036600319011261031a5760043560243560018060a01b03600254166040519182916323b872dd60e01b83526020928391818881610684873033600485016119b9565b03925af1801561070c576106c6575b600080516020611f31833981519152925083855260078252604085206106ba828254611996565b9055604051908152a280f35b8183813d8311610705575b6106db8183611900565b81010312610701576106fb600080516020611f3183398151915293611923565b50610693565b8480fd5b503d6106d1565b6040513d87823e3d90fd5b503461031a578060031936011261031a576001546040516001600160a01b039091168152602090f35b503461031a578060031936011261031a576020600654604051908152f35b503461031a576107766107703661182c565b91611bac565b80f35b503461031a576060908160031936011261031a576004356001600160401b03811161088e576107ac9036906004016117fc565b906024356001600160401b038111610591576107cc9036906004016117fc565b949060065460443510610b9f576107e7604496949635611a27565b916107f56040519384611900565b6044358352601f19610808604435611a27565b0190865b828110610b7657505050849585905b8082106108a557868060206108538b60018060a01b03600254169060405194858094819363a9059cbb60e01b83523360048401611930565b03925af1801561089a57610865575080f35b6020813d8211610892575b8161087d60209383611900565b8101031261088e5761063690611923565b5080fd5b3d9150610870565b6040513d84823e3d90fd5b868060018060a09b9596989a97999b1b03600154166108c586858c611f20565b358260405160208101926375c7050960e01b84526024820152602481526108eb816118e5565b51925af15061090a6108fb611966565b60208082518301019101611e5b565b926001600160a01b031633039050610b57575b506020815191012094845b6044358110610a8757508490815b88518310156109f2576001600160a01b03610951848b611a5b565b515116906001600160a01b03168111156109e057808752600560205260ff604088205416156109ce578061099e610996602061098d878e611a5b565b5101518b611daf565b919091611c9a565b6001600160a01b0316036109bc576109b69092611b44565b91610936565b604051638baa579f60e01b8152600490fd5b604051631a0a9b9f60e21b8152600490fd5b60405163a7781cbb60e01b8152600490fd5b50939050610a80919694979550979197610a0d818888611f20565b358852610a256007998a60205260408a205490611996565b98610a31828989611f20565b35610a3d838a8a611f20565b358a528160205260408a205490604051918252600080516020611f5183398151915260203393a3610a6f828989611f20565b358952602052876040812055611b44565b909461081b565b60449992993585028581046044351486151715610b4357610aab82610ab292611996565b8484611b53565b604081360312610b3f5760405190610ac9826118ca565b80356001600160a01b038116810361028d5782526020810135906001600160401b038211610303570136601f82011215610b3b5790610b13610b3393923690602081359101611b75565b6020820152610b22828b611a5b565b52610b2d818a611a5b565b50611b44565b989198610928565b8780fd5b8680fd5b634e487b7160e01b87526011600452602487fd5b6001600160401b0390610b6990611f08565b1642106105d1573861091d565b602090604099979951610b88816118ca565b89815282848183015282880101520197959761080c565b604051633724e34360e11b8152600490fd5b503461031a57602036600319011261031a578060206001600160a01b03604481610bd9611759565b60035460405163095ea7b360e01b8152941660048501526000196024850152929485938492165af1801561089a57610865575080f35b503461031a578060031936011261031a57546040516001600160a01b039091168152602090f35b503461031a57602036600319011261031a577fbcfae85be40ac3606c557faf143ce6b08c7d99137b0c98eff034fddc6926c31b6020600435610c7661185f565b80600655604051908152a180f35b503461031a5761012036600319011261031a5760ff600435166004350361028d576024356001600160a01b038116900361028d576001600160401b036084358181116110e057610cd890369060040161176f565b60c43592916001600160a01b038416840361028d576040516323b872dd60e01b815260208180610d0f60e4353033600485016119b9565b0381896001600160a01b038a165af1801561111d576111b0575b5060405192608084019081118482101761119a576040526003835260603660208501376001600160a01b038416610d5f84611a3e565b526003546040516315ab88c960e31b81526001600160a01b039091169390602081600481885afa90811561118f578791611160575b50610d9e82611a4b565b6001600160a01b03918216905260028054835192169591111561114a57610e1687959186926060850152610dd660a435606435611996565b938360018060a01b03600454169560405196879586948593634401edf760e11b8552600485015260e435602485015260a0604485015260a4840190611b07565b906064830152600019608483015203925af1801561059c57611128575b50600480546002546040516370a0823160e01b81526001600160a01b03928316938101849052929492911690602081602481855afa90811561111d5786916110e8575b50843b156110e457610ea194869283604051809881958294635705ae4360e01b845260048401611930565b03925af192831561059c5784936110c6575b5090610ef4610ee69260405193849160208301946308745dd160e01b8652606435604435602435600435602488016119db565b03601f198101845283611900565b60015491519183906001600160a01b031661010435f1610f12611966565b50156102a7576001546040516360beed9560e11b81529190602090839060049082906001600160a01b03165afa9182156110bb578392611087575b5060a43561104c575b6040516370a0823160e01b81523060048201526020816024816001600160a01b0386165afa90811561059c57849161101a575b5080610f9b575b602083604051908152f35b610fc0849260209260405196878094819363a9059cbb60e01b83523360048401611930565b03926001600160a01b03165af1801561029a57610fde575b80610f90565b6020833d602011611012575b81610ff760209383611900565b8101031261031a575061100b602092611923565b5038610fd8565b3d9150610fea565b90506020813d602011611044575b8161103560209383611900565b8101031261028d575138610f89565b3d9150611028565b81835260076020526040832061106560a4358254611996565b905581600080516020611f31833981519152602060405160a4358152a2610f56565b9091506020813d6020116110b3575b816110a360209383611900565b8101031261028d57519038610f4d565b3d9150611096565b6040513d85823e3d90fd5b6110d390939192936118b7565b6110e05790829138610eb3565b8280fd5b8580fd5b9550506020853d602011611115575b8161110460209383611900565b8101031261028d5786945138610e76565b3d91506110f7565b6040513d88823e3d90fd5b611143903d8086833e61113b8183611900565b810190611a8e565b5038610e33565b634e487b7160e01b600052603260045260246000fd5b611182915060203d602011611188575b61117a8183611900565b810190611a6f565b38610d94565b503d611170565b6040513d89823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b6020813d6020116111e1575b816111c960209383611900565b810103126110e4576111da90611923565b5038610d29565b3d91506111bc565b503461031a578060031936011261031a5761120261185f565b600080546001600160a01b0319811682556001600160a01b0316600080516020611f718339815191528280a380f35b503461031a57602036600319011261031a5760406020916004358152600783522054604051908152f35b503461031a5760208060031936011261088e57611276611759565b9061127f61185f565b6040516370a0823160e01b81523060048201526001600160a01b03928316928282602481875afa91821561070c578592611321575b50906112dc9383928654168660405180978195829463a9059cbb60e01b845260048401611930565b03925af180156110bb576112ee578280f35b81813d831161131a575b6113028183611900565b8101031261088e5761131390611923565b5038808280f35b503d6112f8565b91508282813d831161134b575b6113388183611900565b8101031261028d579051906112dc6112b4565b503d61132e565b503461031a57604036600319011261031a5761136c611759565b602435908115158092036110e05760207f6b3b7d0d26ec99d080840dca1323c7147d1868adc66a4290afb8101d7908320d916113a661185f565b6001600160a01b0316808552600582526040808620805460ff191660ff87161790555193845292a280f35b503461031a5780602080600319360112611428576004356113f061185f565b8161051f60018060a01b036002541683865260078352604086205460405196878094819363a9059cbb60e01b83523360048401611930565b50fd5b506114353661179c565b94926114489896929197949860806118e5565b600260805260403660a0376003546040516315ab88c960e31b81526001600160a01b0390911690602081600481855afa90811561030f57899161173a575b506114916080611a3e565b6001600160a01b039182169052600254166114ac6080611a4b565b52876114b88a8c611996565b60018060a01b036004541692604051808095819463fb3bdb4160e01b83526004830152608060248301526114f0608483016080611b07565b9060448301526000196064830152039134905af180156116d257611720575b50600480546002546040516370a0823160e01b81526001600160a01b039283169381018490529b92911660208c602481845afa9b8c15611715578a9c6116e1575b50813b156116dd579a899161157d9b9c83604051809e81958294635705ae4360e01b845260048401611930565b03925af180156116d2576116af575b879850926101b088979695936115bc938996604051968795602087019a6308745dd160e01b8c52602488016119db565b60018060a01b0360015416905193f16115d3611966565b50156102a7576001546040516360beed9560e11b81529190602090839060049082906001600160a01b03165afa91821561029a578192611678575b508183602094611641575b50504761162a575b50604051908152f35b80808047335af15061163a611966565b5038611621565b84600080516020611f31833981519152918385526007825260408520611668828254611996565b9055604051908152a28138611619565b9291506020833d6020116116a7575b8161169460209383611900565b8101031261028d5760209251919261160e565b3d9150611687565b926115bc9196959492976116c56101b09a6118b7565b979294959691509261158c565b6040513d8a823e3d90fd5b8980fd5b909b506020813d60201161170d575b816116fd60209383611900565b810103126116dd57519a38611550565b3d91506116f0565b6040513d8c823e3d90fd5b611733903d808a833e61113b8183611900565b503861150f565b611753915060203d6020116111885761117a8183611900565b38611486565b600435906001600160a01b038216820361028d57565b9181601f8401121561028d578235916001600160401b03831161028d576020838186019501011161028d57565b60e060031982011261028d5760043560ff8116810361028d57916024356001600160a01b038116810361028d57916044359160643591608435906001600160401b03821161028d576117f09160040161176f565b909160a4359060c43590565b9181601f8401121561028d578235916001600160401b03831161028d576020808501948460051b01011161028d57565b90604060031983011261028d5760043591602435906001600160401b03821161028d5761185b916004016117fc565b9091565b6000546001600160a01b0316330361187357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160401b03811161119a57604052565b604081019081106001600160401b0382111761119a57604052565b606081019081106001600160401b0382111761119a57604052565b601f909101601f19168101906001600160401b0382119082101761119a57604052565b5190811515820361028d57565b6001600160a01b039091168152602081019190915260400190565b6001600160401b03811161119a57601f01601f191660200190565b3d15611991573d906119778261194b565b916119856040519384611900565b82523d6000602084013e565b606090565b919082018092116119a357565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03918216815291166020820152604081019190915260600190565b9491928694919360ff60c0989516875260018060a01b031660208701526040860152606085015260a060808501528160a0850152848401376000828201840152601f01601f1916010190565b6001600160401b03811161119a5760051b60200190565b80511561114a5760200190565b80516001101561114a5760400190565b805182101561114a5760209160051b010190565b9081602091031261028d57516001600160a01b038116810361028d5790565b602090818184031261028d578051906001600160401b03821161028d57019180601f8401121561028d578251611ac381611a27565b93611ad16040519586611900565b818552838086019260051b82010192831161028d578301905b828210611af8575050505090565b81518152908301908301611aea565b90815180825260208080930193019160005b828110611b27575050505090565b83516001600160a01b031685529381019392810192600101611b19565b60001981146119a35760010190565b919081101561114a5760051b81013590603e198136030182121561028d570190565b929192611b818261194b565b91611b8f6040519384611900565b82948184528183011161028d578281602093846000960137010152565b90916006548110610b9f576000805b828210611bc9575050505050565b611bd4828487611b53565b35906001600160a01b03908183169081840361028d578282911610156109e057806000526020916005835260409260ff84600020541615611c8957611c1a86888b611b53565b8181013590601e198136030182121561028d5701803591906001600160401b03831161028d5701813603811361028d57611c5c61099691611c62933691611b75565b89611daf565b1603611c795750611c739091611b44565b90611bbb565b51638baa579f60e01b8152600490fd5b8351631a0a9b9f60e21b8152600490fd5b6005811015611d995780611cab5750565b60018103611cf35760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606490fd5b60028103611d405760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b600314611d4957565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b906041815114600014611dd95761185b916020820151906060604084015193015160001a90611de3565b5050600090600290565b9291906fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311611e4f5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa1561029a5781516001600160a01b03811615611e49579190565b50600190565b50505050600090600390565b60808183031261028d5780516001600160a01b038116810361028d5792602092838301519360018060401b0394858116810361028d5794611e9e60408601611923565b94606081015191821161028d570182601f8201121561028d57805190611ec38261194b565b93611ed16040519586611900565b82855283838301011161028d5760005b828110611ef5575050906000918301015290565b8181018401518582018501528301611ee1565b6001600160401b03908116603c01919082116119a357565b919081101561114a5760051b019056fe19d4213c1f22deb153156be5bf9eee8fe77c36a557d83434b8cbb543fc034d6a8c8fb16c3fff3e9353f4a39b33dd9e38ba88594f8c66defbff2048265738780b8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a264697066735822122066ffcb62aeca013bdb07e2dc791117b0a9a0d849d4b5df9abd7da719976e86c664736f6c63430008130033";

type ArbiusRouterV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbiusRouterV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbiusRouterV1__factory extends ContractFactory {
  constructor(...args: ArbiusRouterV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    engine_: PromiseOrValue<string>,
    arbius_: PromiseOrValue<string>,
    router_: PromiseOrValue<string>,
    receiver_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbiusRouterV1> {
    return super.deploy(
      engine_,
      arbius_,
      router_,
      receiver_,
      overrides || {}
    ) as Promise<ArbiusRouterV1>;
  }
  override getDeployTransaction(
    engine_: PromiseOrValue<string>,
    arbius_: PromiseOrValue<string>,
    router_: PromiseOrValue<string>,
    receiver_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      engine_,
      arbius_,
      router_,
      receiver_,
      overrides || {}
    );
  }
  override attach(address: string): ArbiusRouterV1 {
    return super.attach(address) as ArbiusRouterV1;
  }
  override connect(signer: Signer): ArbiusRouterV1__factory {
    return super.connect(signer) as ArbiusRouterV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbiusRouterV1Interface {
    return new utils.Interface(_abi) as ArbiusRouterV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbiusRouterV1 {
    return new Contract(address, _abi, signerOrProvider) as ArbiusRouterV1;
  }
}
